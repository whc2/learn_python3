#莫尔斯电码的编解码
#从网页拷贝得到的原始数据：
#
#A  ·-  B   -···    C   -·-·    D   -·· E   ·   F   ··-·    G   --·
#H   ····    I   ··  J   ·---    K   -·- L   ·-··    M   --  N   -·
#O   --- P   ·--·    Q   --·-    R   ·-· S   ··· T   -   U   ··-
#V   ···-    W   ·-- X   -··-    Y   -·--    Z   --··                

#利用Excel进行规整，再拷贝过来：
src_text = """A	·-
H	····
O	---
V	···-
B	-···
I	··
P	·--·
W	·--
C	-·-·
J	·---
Q	--·-
X	-··-
D	-··
K	-·-
R	·-·
Y	-·--
D	-··
K	-·-
R	·-·
Y	-·--
E	·
L	·-··
S	···
Z	--··
F	··-·
M	--
T	-
G	--·
N	-·
U	··-"""
#用不带参数的split()在所有不可见字符处切分
moorse_table_dict = dict()
items = src_text.split()
for i in range(int(len(items)/2)):
	moorse_table_dict[items[2 * i]] = items[2 * i + 1]
#print(moorse_table_dict)

#用带参数的split()在特定字符处切分
moorse_table_dict_ = dict()
for line in src_text.split('\n'):
	k, v = line.split('\t')
	moorse_table_dict_[k] = v
#print(moorse_table_dict_)

#CSV文件的读取
#!cat moorse.csv
import csv
moorse_dict = dict()
with open('moorse.csv', 'r') as f:
	csv_reader = csv.reader(f)
	for row in csv_reader:
#		print(row)
#		print(row[0][-1], row[1])
		moorse_dict[row[0][-1]] = row[1]
#print(moorse_dict)

#用文本编辑器的正则查找、替换规整数据
moorse_dict = {
    'A': '·-',
    'B': '-···',
    'C': '-·-·',
    'D': '-··',
    'E': '·',
    'F': '··-·',
    'G': '--·',
    'H': '····',
    'I': '··',
    'J': '·---',
    'K': '-·-',
    'L': '·-··',
    'M': '--',
    'N': '-·',
    'O': '---',
    'P': '·--·',
    'Q': '--·-',
    'R': '·-·',
    'S': '···',
    'T': '-',
    'U': '··-',
    'V': '···-',
    'W': '·--',
    'X': '-··-',
    'Y': '-·--',
    'Z': '--··',
    '1': '·----',
    '2': '··---',
    '3': '···--',
    '4': '····-',
    '5': '·····',
    '6': '-····',
    '7': '--···',
    '8': '---··',
    '9': '----·',
    '0': '-----',
    '.': '·-·-·-',
    ':': '---···',
    ',': '--··--',
    ';': '-·-·-·',
    '?': '··--··',
    '=': '-···-',
    '\'': '·----·',
    '/': '-··-·',
    '!': '-·-·--',
    '-': '-····-',
    '_': '··--·-',
    '"': '·-··-·',
    '(': '-·--·',
    ')': '-·--·-',
    '$': '···-··-',
    '&': '·-···',
    '@': '·--·-·',
    '+': '·-·-·',
}
#print(moorse_dict)

#用代码进行正则表达式数据抽取
src_text = """基础拉丁字母
字符	代码	字符	代码	字符	代码	字符	代码	字符	代码	字符	代码	字符	代码
A	·-	B	-···	C	-·-·	D	-··	E	·	F	··-·	G	--·
H	····	I	··	J	·---	K	-·-	L	·-··	M	--	N	-·
O	---	P	·--·	Q	--·-	R	·-·	S	···	T	-	U	··-
V	···-	W	·--	X	-··-	Y	-·--	Z	--··				
数字
摩尔斯电码的数字有长码和短码，通常用长码，于中文电码中组成汉字则使用短码。

字符	长码	短码	字符	长码	短码	字符	长码	短码	字符	长码	短码	字符	长码	短码
1	·----	·-	2	··---	··-	3	···--	···-	4	····-	····-	5	·····	·····
6	-····	-····	7	--···	-···	8	---··	-··	9	----·	-·	0	-----	-
标点符号
字符	代码	字符	代码	字符	代码	字符	代码	字符	代码	字符	代码
.	·-·-·-	:	---···	,	--··--	;	-·-·-·	?	··--··	=	-···-
'	·----·	/	-··-·	!	-·-·--	-	-····-	_	··--·-	"	·-··-·
(	-·--·	)	-·--·-	$	···-··-	&	·-···	@	·--·-·	+	·-·-·
"""
import re
moorse_sict_reverse = dict()
for k, v in re.findall('(.)\t([-·]+)', src_text):
#	print(k, v)
	moorse_dict[k] = v
	moorse_sict_reverse[v] = k
#print(moorse_dict)
print(moorse_sict_reverse)
